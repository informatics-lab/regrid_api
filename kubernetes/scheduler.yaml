# Deployment
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dask-scheduler
  namespace: regrid
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: dask-scheduler
    spec:
      serviceAccountName: dask-autoscaler
      automountServiceAccountToken: true
      containers:
        - image: informaticslab/regridding_processor:kubenetes
          command: ["/bin/bash"]
          args: ["/opt/scheduler/run.sh"]
          imagePullPolicy: Always
          name: dask-scheduler
          ports:
            - containerPort: 8787
            - containerPort: 8786
          resources:
            requests:
              cpu: 100m
              memory: 1Gi # Do we need to grab this much?
          volumeMounts:
            - name: config-volume
              mountPath: /opt/scheduler
      volumes:
        - name: config-volume
          configMap:
            name: scheduler
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dask-autoscaler
  namespace: regrid
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: regrid
  name: dask-autoscaler
rules:
- apiGroups: [""]
  resources: ["deployment"]
  resourceNames: ["dask-workers"]
  verbs: ["update", "get"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: dask-autoscaler
  namespace: regrid
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dask-autoscaler
subjects:
  - kind: ServiceAccount
    name: dask-autoscaler
    namespace: dask
---
# Service
kind: Service
metadata:
  name: dask
  namespace: regrid
spec:
  ports:
    - port: 8786
      targetPort: 8786
      protocol: TCP
  selector:
    app: dask-scheduler
---
# Service
kind: Service
metadata:
  name: dask-stats
  namespace: regrid
spec:
  ports:
    - port: 8787
      targetPort: 8787
      protocol: TCP
  selector:
    app: dask-scheduler
---
# ingress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: regrid-stats.informaticslab.co.uk
  namespace: regrid
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - regrid-stats.informaticslab.co.uk
    secretName: regrid-stats-api-tls
  rules:
  - host: regrid-stats.informaticslab.co.uk
    http:
      paths:
      - path: /
        backend:
          serviceName: dask-stats
          servicePort: 80